name: Optimize Images
on:
  workflow_dispatch:
    branches: [master]    
  push:
    branches: [master]
    paths:
      - "content/images/**"

jobs:
  cancel-running-jobs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

  images:
    if: ${{ !contains(github.event.commits[0].message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "10.17"
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup npm
        run: npm install --prefix imgoptim --no-save

      - name: Optimize Images
        run: |
          cd imgoptim
          node optimize.js
          cd ..

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"
          yarn config set prefix $(yarn cache dir)
          echo $(yarn global bin) >> $GITHUB_PATH
          yarn config set global-folder $(yarn cache dir)

      - name: Cache Yarn
        uses: actions/cache@v2
        env:
          cache-version: v1
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ env.cache-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-version }}-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-

      - name: Install Netlify
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn global add netlify-cli

      - name: Deploy images to Netlify
        run: |
          cp -r --no-clobber ./content/images/. assets/images
          "$(yarn global bin)/netlify" deploy --dir=assets --prod
        shell: bash
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_DEV_AUTH }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITEID_MEDIA }}

      - name: Pull New Changes
        run: git pull

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update optimized images
          file_pattern: imgoptim/image-cache.json assets/images/*
