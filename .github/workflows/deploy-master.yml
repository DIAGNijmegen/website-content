name: Build and Deploy
on:
  workflow_dispatch:
    branches: [master]
  push:
    branches: [master]

jobs:
  cancel-running-jobs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

  deploy:
    if: ${{ !contains(github.event.commits[0].message, '[skip ci]') }}
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        include:
          - name: website-diag
            site-id: NETLIFY_SITEID_DIAG
          - name: website-pathology
            site-id: NETLIFY_SITEID_PATHOLOGY
          - name: website-retina
            site-id: NETLIFY_SITEID_RETINA
          - name: website-rse
            site-id: NETLIFY_SITEID_RSE
          - name: website-rtc
            site-id: NETLIFY_SITEID_RTC
          - name: website-ai-for-health
            site-id: NETLIFY_SITEID_AIFORHEALTH

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      # - uses: actions/cache@v2
      #   id: cache
      #   with:
      #     path: ${{ env.pythonLocation }}
      #     key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"
          yarn config set prefix $(yarn cache dir)
          echo $(yarn global bin) >> $GITHUB_PATH
          yarn config set global-folder $(yarn cache dir)

      - name: Cache Yarn
        uses: actions/cache@v2
        env:
          cache-version: v1
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ env.cache-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-version }}-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-

      - name: Install Netlify
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn global add netlify-cli

      - name: Build and Deploy
        uses: ./.github/workflows/actions/build-and-deploy
        with:
          website-dir: ${{ matrix.name }}
          website-api: ${{ secrets[matrix.site-id] }}
          netlify_key: ${{ secrets.NETLIFY_DEV_AUTH }}
          github_token: ${{ secrets.GH_BIB_TOKEN }}

  notify:
    needs: deploy
    if: ${{ failure() }}
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Send notification
        run: python -c "print('I should be sending a notification, but that is not implemented yet...')"
